{"version":3,"sources":["components/NumofPeople.js","components/TipPercentage.js","components/FormSection.js","components/ResultSection.js","components/TipCalculator.js","index.js","App.js"],"names":["NumofPeople","props","react_default","a","createElement","type","value","num_of_ppl","onChange","splitTip","TipPercentage","id","className","onClick","validateAndUpdateTipPercentage","placeholder","onFocus","FormSection","bill","validateAndUpdateBill","updateIsSplitTip","isSplitTip","splitTipFunc","ResultSection","tip","total","tip_per_person","total_per_person","TipCalculator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","preventDefault","parseInt","target","replace","toFixed","setState","calcTip","tipPercentage","parseFloat","state","React","Component","ReactDOM","render","components_TipCalculator","document","getElementById"],"mappings":"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","file":"static/js/main.cc24392c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div>\r\n            Number of People: <input type=\"text\" value={props.num_of_ppl} onChange={props.splitTip}></input>\r\n            <br/><br/>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default (props) =>{\r\n    return (\r\n        <div id=\"tipPercentage\">\r\n            <input type=\"button\" className=\"btn btn-outline-success\" value=\"10\" onClick={props.validateAndUpdateTipPercentage} /> \r\n            <input type=\"button\" className=\"btn btn-outline-success\" value=\"12\" onClick={props.validateAndUpdateTipPercentage} />\r\n            <input type=\"button\" className=\"btn btn-outline-success\" value=\"15\" onClick={props.validateAndUpdateTipPercentage} />\r\n            <input type=\"button\" className=\"btn btn-outline-success\" value=\"18\" onClick={props.validateAndUpdateTipPercentage} />\r\n            <br></br>\r\n            Or customize tip %: <input type=\"text\"\r\n                placeholder=\"0\"\r\n                onChange={props.validateAndUpdateTipPercentage}\r\n                onFocus={props.validateAndUpdateTipPercentage}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport NumofPeople from \"./NumofPeople\";\r\nimport TipPercentage from \"./TipPercentage\";\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div id=\"inputs\">\r\n            Bill: $<input type=\"text\" \r\n                value={props.bill}\r\n                onChange={props.validateAndUpdateBill} \r\n            />\r\n            <br/>\r\n            <br/>\r\n            Tip Percentage %: \r\n            <TipPercentage validateAndUpdateTipPercentage={props.validateAndUpdateTipPercentage} />\r\n            <br />\r\n            <input type=\"checkbox\" onChange={props.updateIsSplitTip}/> Split tip?\r\n            <br/>\r\n            <br/>\r\n            { props.isSplitTip && (\r\n                <NumofPeople \r\n                    num_of_ppl = {props.num_of_ppl}\r\n                    splitTip = {props.splitTipFunc}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div id=\"results\">\r\n            Total Tip: {props.tip}\r\n            <br/><br/>\r\n            Total Amount: {props.total}\r\n            <br/><br/>\r\n            { props.isSplitTip && (\r\n                <div id=\"splitTip\">\r\n                    Tip Per Person: {props.tip_per_person}\r\n                    <br/><br/>\r\n                    Total Per Person: {props.total_per_person}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport FormSection from \"./FormSection\";\r\nimport ResultSection from \"./ResultSection\";\r\n\r\nclass TipCalculator extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            bill : '0.00',\r\n            tipPercentage : 0,\r\n            tip : '0.00',\r\n            total: '0.00',\r\n            num_of_ppl : 0,\r\n            tip_per_person : '0.00',\r\n            total_per_person: '0.00',\r\n            isSplitTip : false\r\n        };\r\n    }\r\n\r\n    // validate each time user enters a key\r\n    validateAndUpdateBill = (event) => {\r\n        event.preventDefault();\r\n        \r\n        // not allow non numerical value enter as input\r\n        let bill = parseInt(event.target.value.replace(/[^\\d]/, ''));\r\n\r\n        if(!bill)    {\r\n            bill = '0.00';\r\n        }\r\n        else{\r\n            bill = (bill / 100).toFixed(2);\r\n        }\r\n\r\n        this.setState({bill}, () => this.calcTip());\r\n    }\r\n\r\n    validateAndUpdateTipPercentage = (event) => {\r\n        event.preventDefault();\r\n\r\n        let tipPercentage = parseInt(event.target.value.replace(/[^\\d]/, ''));\r\n\r\n        if(!tipPercentage)    {\r\n            tipPercentage = 0;\r\n        }\r\n\r\n        this.setState({tipPercentage}, () => this.calcTip());\r\n    }\r\n\r\n    calcTip = () => {\r\n        let tip = (parseFloat(this.state.bill) * this.state.tipPercentage * 0.01).toFixed(2);\r\n        let total = (parseFloat(tip) + parseFloat(this.state.bill)).toFixed(2);\r\n\r\n        this.setState({tip, total}, () => {\r\n            if(this.state.isSplitTip && this.state.num_of_ppl !== 0){\r\n                let tip_per_person = (parseFloat(this.state.tip) / this.state.num_of_ppl).toFixed(2);\r\n                let total_per_person = (parseFloat(total) / this.state.num_of_ppl).toFixed(2);\r\n                this.setState({tip_per_person, total_per_person});\r\n            }\r\n        });\r\n    }\r\n\r\n    updateIsSplitTip = () => {\r\n        if(this.state.isSplitTip) \r\n            this.setState({isSplitTip: false});\r\n        else this.setState({isSplitTip: true});\r\n    }\r\n\r\n    splitTip = (event) =>{\r\n        event.preventDefault();\r\n\r\n        let num_of_ppl = parseInt(event.target.value.replace(/[^\\d]/, ''));\r\n\r\n\r\n        if(num_of_ppl && num_of_ppl !== 0){\r\n            let tip_per_person = (parseFloat(this.state.tip) / num_of_ppl).toFixed(2);\r\n            let total_per_person = (parseFloat(this.state.total) / num_of_ppl).toFixed(2);\r\n\r\n            this.setState({num_of_ppl, tip_per_person, total_per_person});\r\n        }\r\n        else this.setState({num_of_ppl: 0, tip_per_person : '0.00', total_per_person: '0.00'});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"tip-calculator\">\r\n                <div className=\"outer\">\r\n                    <FormSection \r\n                        bill = {this.state.bill}\r\n                        tipPercentage = {this.state.tipPercentage}\r\n                        num_of_ppl = {this.state.num_of_ppl}\r\n                        isSplitTip = {this.state.isSplitTip}\r\n                        validateAndUpdateBill = {this.validateAndUpdateBill}\r\n                        validateAndUpdateTipPercentage = {this.validateAndUpdateTipPercentage}\r\n                        updateIsSplitTip = {this.updateIsSplitTip}\r\n                        splitTipFunc = {this.splitTip}\r\n                    />\r\n                    <br/>\r\n                    <ResultSection \r\n                        tip = {this.state.tip}\r\n                        total = {this.state.total}\r\n                        isSplitTip = {this.state.isSplitTip}\r\n                        tip_per_person = {this.state.tip_per_person}\r\n                        total_per_person = {this.state.total_per_person}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TipCalculator;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./components/style.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));","import React from \"react\";\r\nimport TipCalculator from \"./components/TipCalculator\";\r\n\r\nexport default () => {\r\n    return (\r\n        <div id=\"main\">\r\n            <TipCalculator />\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}